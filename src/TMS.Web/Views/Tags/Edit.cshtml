@using TMS.Web.Components.Tags
@using TMS.ViewModelLayer.Models.Tags
@using TMS.ModelLayer.Tags
@using TMS.ViewModelLayer.Models.Tags.AddTagContextTypes
@model TMS.ViewModelLayer.Models.Tags.Pages.EditTagPageModel

@{
    ViewData["Title"] = "Edit Tag";
}

<h2>@ViewData["Title"].</h2>

<div class="row">
    <div class="col-md-8">
        <form asp-controller="Tags" asp-action="Edit" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
            <h4>Edit activity @Model.Name.</h4>
            <hr />
            <input type="hidden" asp-for="TagId" />
            <input type="hidden" asp-for="AuthorId" />
            <input type="hidden" asp-for="Created" />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="checkbox col-md-10 col-md-offset-2">
                    <label>
                        <input asp-for="CanSetOnActivity" type="checkbox">Can Set On Activity
                    </label>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-default">Update</button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div id="tag-list">
            @await Component.InvokeAsync(nameof(TagList), new { data = new TagListFilterData { ChildTagId = Model.TagId } })
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        @await Component.InvokeAsync(nameof(AddTagComponent), new
       {
           data = new AddTagData
           {
               ObjectId = Model.TagId,
               Context = new AddTagToTagContextType()
           }
       })
    </div>
</div>